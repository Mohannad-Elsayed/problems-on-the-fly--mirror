modinv[1] = 1;
for(int i = 2; i < MAXN; ++i){
    modinv[i] = MOD - mul(MOD / i, modinv[MOD % i]);
}


a^(-1) = a^(phi(m)-1) mod m when gcd(a,m) = 1



You can find it in kactl
When gcd(a,m) != 1
int x, y;
int g = extended_euclidean(a, m, x, y);
if (g != 1) {
    cout << "No solution!";
}
else {
    x = (x % m + m) % m;
    cout << x << endl;
}


